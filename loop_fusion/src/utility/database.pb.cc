// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: database.proto

#include "database.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_database_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_database_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DescriptorsProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_database_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImageNormPointProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_database_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ImagePointProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_database_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MapPointProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_database_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PoseProto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_database_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_FrameProto;
}  // namespace protobuf_database_2eproto
class ImagePointProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImagePointProto>
      _instance;
} _ImagePointProto_default_instance_;
class ImageNormPointProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageNormPointProto>
      _instance;
} _ImageNormPointProto_default_instance_;
class MapPointProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapPointProto>
      _instance;
} _MapPointProto_default_instance_;
class PoseProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PoseProto>
      _instance;
} _PoseProto_default_instance_;
class DescriptorsProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DescriptorsProto>
      _instance;
} _DescriptorsProto_default_instance_;
class FrameProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FrameProto>
      _instance;
} _FrameProto_default_instance_;
class MapProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MapProto>
      _instance;
} _MapProto_default_instance_;
namespace protobuf_database_2eproto {
static void InitDefaultsImagePointProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ImagePointProto_default_instance_;
    new (ptr) ::ImagePointProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImagePointProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImagePointProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImagePointProto}, {}};

static void InitDefaultsImageNormPointProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ImageNormPointProto_default_instance_;
    new (ptr) ::ImageNormPointProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImageNormPointProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImageNormPointProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImageNormPointProto}, {}};

static void InitDefaultsMapPointProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MapPointProto_default_instance_;
    new (ptr) ::MapPointProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MapPointProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MapPointProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMapPointProto}, {}};

static void InitDefaultsPoseProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PoseProto_default_instance_;
    new (ptr) ::PoseProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PoseProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PoseProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoseProto}, {}};

static void InitDefaultsDescriptorsProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_DescriptorsProto_default_instance_;
    new (ptr) ::DescriptorsProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DescriptorsProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DescriptorsProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDescriptorsProto}, {}};

static void InitDefaultsFrameProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_FrameProto_default_instance_;
    new (ptr) ::FrameProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FrameProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_FrameProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsFrameProto}, {
      &protobuf_database_2eproto::scc_info_ImagePointProto.base,
      &protobuf_database_2eproto::scc_info_ImageNormPointProto.base,
      &protobuf_database_2eproto::scc_info_MapPointProto.base,
      &protobuf_database_2eproto::scc_info_DescriptorsProto.base,
      &protobuf_database_2eproto::scc_info_PoseProto.base,}};

static void InitDefaultsMapProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_MapProto_default_instance_;
    new (ptr) ::MapProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MapProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MapProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMapProto}, {
      &protobuf_database_2eproto::scc_info_FrameProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ImagePointProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageNormPointProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapPointProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PoseProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DescriptorsProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FrameProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MapProto.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImagePointProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImagePointProto, u_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImagePointProto, v_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageNormPointProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageNormPointProto, u_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ImageNormPointProto, v_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPointProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPointProto, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPointProto, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapPointProto, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PoseProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PoseProto, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PoseProto, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PoseProto, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PoseProto, q_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PoseProto, q_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PoseProto, q_z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PoseProto, q_w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DescriptorsProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DescriptorsProto, bitset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameProto, image_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameProto, image_norm_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameProto, map_points_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameProto, descriptors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameProto, frame_pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameProto, frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FrameProto, loop_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MapProto, frames_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ImagePointProto)},
  { 7, -1, sizeof(::ImageNormPointProto)},
  { 14, -1, sizeof(::MapPointProto)},
  { 22, -1, sizeof(::PoseProto)},
  { 34, -1, sizeof(::DescriptorsProto)},
  { 40, -1, sizeof(::FrameProto)},
  { 52, -1, sizeof(::MapProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ImagePointProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ImageNormPointProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MapPointProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PoseProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_DescriptorsProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_FrameProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MapProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "database.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016database.proto\"\'\n\017ImagePointProto\022\t\n\001u"
      "\030\001 \001(\002\022\t\n\001v\030\002 \001(\002\"+\n\023ImageNormPointProto"
      "\022\t\n\001u\030\001 \001(\002\022\t\n\001v\030\002 \001(\002\"0\n\rMapPointProto\022"
      "\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"`\n\tPose"
      "Proto\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\013"
      "\n\003q_x\030\004 \001(\002\022\013\n\003q_y\030\005 \001(\002\022\013\n\003q_z\030\006 \001(\002\022\013\n"
      "\003q_w\030\007 \001(\002\"\"\n\020DescriptorsProto\022\016\n\006bitset"
      "\030\001 \001(\t\"\367\001\n\nFrameProto\022&\n\014image_points\030\001 "
      "\003(\0132\020.ImagePointProto\022/\n\021image_norm_poin"
      "ts\030\002 \003(\0132\024.ImageNormPointProto\022\"\n\nmap_po"
      "ints\030\003 \003(\0132\016.MapPointProto\022&\n\013descriptor"
      "s\030\004 \003(\0132\021.DescriptorsProto\022\036\n\nframe_pose"
      "\030\005 \001(\0132\n.PoseProto\022\020\n\010frame_id\030\006 \001(\004\022\022\n\n"
      "loop_index\030\007 \001(\004\"\'\n\010MapProto\022\033\n\006frames\030\001"
      " \003(\0132\013.FrameProtob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 585);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "database.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_database_2eproto

// ===================================================================

void ImagePointProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImagePointProto::kUFieldNumber;
const int ImagePointProto::kVFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImagePointProto::ImagePointProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_database_2eproto::scc_info_ImagePointProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImagePointProto)
}
ImagePointProto::ImagePointProto(const ImagePointProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&u_, &from.u_,
    static_cast<size_t>(reinterpret_cast<char*>(&v_) -
    reinterpret_cast<char*>(&u_)) + sizeof(v_));
  // @@protoc_insertion_point(copy_constructor:ImagePointProto)
}

void ImagePointProto::SharedCtor() {
  ::memset(&u_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v_) -
      reinterpret_cast<char*>(&u_)) + sizeof(v_));
}

ImagePointProto::~ImagePointProto() {
  // @@protoc_insertion_point(destructor:ImagePointProto)
  SharedDtor();
}

void ImagePointProto::SharedDtor() {
}

void ImagePointProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImagePointProto::descriptor() {
  ::protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImagePointProto& ImagePointProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_database_2eproto::scc_info_ImagePointProto.base);
  return *internal_default_instance();
}


void ImagePointProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ImagePointProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&u_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v_) -
      reinterpret_cast<char*>(&u_)) + sizeof(v_));
  _internal_metadata_.Clear();
}

bool ImagePointProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImagePointProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float u = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &u_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float v = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImagePointProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImagePointProto)
  return false;
#undef DO_
}

void ImagePointProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImagePointProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float u = 1;
  if (this->u() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->u(), output);
  }

  // float v = 2;
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->v(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImagePointProto)
}

::google::protobuf::uint8* ImagePointProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImagePointProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float u = 1;
  if (this->u() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->u(), target);
  }

  // float v = 2;
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->v(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImagePointProto)
  return target;
}

size_t ImagePointProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImagePointProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float u = 1;
  if (this->u() != 0) {
    total_size += 1 + 4;
  }

  // float v = 2;
  if (this->v() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImagePointProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImagePointProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ImagePointProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImagePointProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImagePointProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImagePointProto)
    MergeFrom(*source);
  }
}

void ImagePointProto::MergeFrom(const ImagePointProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImagePointProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.u() != 0) {
    set_u(from.u());
  }
  if (from.v() != 0) {
    set_v(from.v());
  }
}

void ImagePointProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImagePointProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImagePointProto::CopyFrom(const ImagePointProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImagePointProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImagePointProto::IsInitialized() const {
  return true;
}

void ImagePointProto::Swap(ImagePointProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImagePointProto::InternalSwap(ImagePointProto* other) {
  using std::swap;
  swap(u_, other->u_);
  swap(v_, other->v_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImagePointProto::GetMetadata() const {
  protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageNormPointProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageNormPointProto::kUFieldNumber;
const int ImageNormPointProto::kVFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageNormPointProto::ImageNormPointProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_database_2eproto::scc_info_ImageNormPointProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImageNormPointProto)
}
ImageNormPointProto::ImageNormPointProto(const ImageNormPointProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&u_, &from.u_,
    static_cast<size_t>(reinterpret_cast<char*>(&v_) -
    reinterpret_cast<char*>(&u_)) + sizeof(v_));
  // @@protoc_insertion_point(copy_constructor:ImageNormPointProto)
}

void ImageNormPointProto::SharedCtor() {
  ::memset(&u_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v_) -
      reinterpret_cast<char*>(&u_)) + sizeof(v_));
}

ImageNormPointProto::~ImageNormPointProto() {
  // @@protoc_insertion_point(destructor:ImageNormPointProto)
  SharedDtor();
}

void ImageNormPointProto::SharedDtor() {
}

void ImageNormPointProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageNormPointProto::descriptor() {
  ::protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageNormPointProto& ImageNormPointProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_database_2eproto::scc_info_ImageNormPointProto.base);
  return *internal_default_instance();
}


void ImageNormPointProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ImageNormPointProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&u_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v_) -
      reinterpret_cast<char*>(&u_)) + sizeof(v_));
  _internal_metadata_.Clear();
}

bool ImageNormPointProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ImageNormPointProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float u = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &u_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float v = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ImageNormPointProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ImageNormPointProto)
  return false;
#undef DO_
}

void ImageNormPointProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ImageNormPointProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float u = 1;
  if (this->u() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->u(), output);
  }

  // float v = 2;
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->v(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ImageNormPointProto)
}

::google::protobuf::uint8* ImageNormPointProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ImageNormPointProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float u = 1;
  if (this->u() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->u(), target);
  }

  // float v = 2;
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->v(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImageNormPointProto)
  return target;
}

size_t ImageNormPointProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImageNormPointProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float u = 1;
  if (this->u() != 0) {
    total_size += 1 + 4;
  }

  // float v = 2;
  if (this->v() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageNormPointProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImageNormPointProto)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageNormPointProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageNormPointProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImageNormPointProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImageNormPointProto)
    MergeFrom(*source);
  }
}

void ImageNormPointProto::MergeFrom(const ImageNormPointProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImageNormPointProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.u() != 0) {
    set_u(from.u());
  }
  if (from.v() != 0) {
    set_v(from.v());
  }
}

void ImageNormPointProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImageNormPointProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageNormPointProto::CopyFrom(const ImageNormPointProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImageNormPointProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageNormPointProto::IsInitialized() const {
  return true;
}

void ImageNormPointProto::Swap(ImageNormPointProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageNormPointProto::InternalSwap(ImageNormPointProto* other) {
  using std::swap;
  swap(u_, other->u_);
  swap(v_, other->v_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageNormPointProto::GetMetadata() const {
  protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MapPointProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapPointProto::kXFieldNumber;
const int MapPointProto::kYFieldNumber;
const int MapPointProto::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapPointProto::MapPointProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_database_2eproto::scc_info_MapPointProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapPointProto)
}
MapPointProto::MapPointProto(const MapPointProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:MapPointProto)
}

void MapPointProto::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

MapPointProto::~MapPointProto() {
  // @@protoc_insertion_point(destructor:MapPointProto)
  SharedDtor();
}

void MapPointProto::SharedDtor() {
}

void MapPointProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MapPointProto::descriptor() {
  ::protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapPointProto& MapPointProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_database_2eproto::scc_info_MapPointProto.base);
  return *internal_default_instance();
}


void MapPointProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MapPointProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool MapPointProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapPointProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapPointProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapPointProto)
  return false;
#undef DO_
}

void MapPointProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapPointProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MapPointProto)
}

::google::protobuf::uint8* MapPointProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MapPointProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapPointProto)
  return target;
}

size_t MapPointProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapPointProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapPointProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapPointProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MapPointProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapPointProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapPointProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapPointProto)
    MergeFrom(*source);
  }
}

void MapPointProto::MergeFrom(const MapPointProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapPointProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void MapPointProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapPointProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapPointProto::CopyFrom(const MapPointProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapPointProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapPointProto::IsInitialized() const {
  return true;
}

void MapPointProto::Swap(MapPointProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapPointProto::InternalSwap(MapPointProto* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MapPointProto::GetMetadata() const {
  protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PoseProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoseProto::kXFieldNumber;
const int PoseProto::kYFieldNumber;
const int PoseProto::kZFieldNumber;
const int PoseProto::kQXFieldNumber;
const int PoseProto::kQYFieldNumber;
const int PoseProto::kQZFieldNumber;
const int PoseProto::kQWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoseProto::PoseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_database_2eproto::scc_info_PoseProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PoseProto)
}
PoseProto::PoseProto(const PoseProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&q_w_) -
    reinterpret_cast<char*>(&x_)) + sizeof(q_w_));
  // @@protoc_insertion_point(copy_constructor:PoseProto)
}

void PoseProto::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&q_w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(q_w_));
}

PoseProto::~PoseProto() {
  // @@protoc_insertion_point(destructor:PoseProto)
  SharedDtor();
}

void PoseProto::SharedDtor() {
}

void PoseProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PoseProto::descriptor() {
  ::protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoseProto& PoseProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_database_2eproto::scc_info_PoseProto.base);
  return *internal_default_instance();
}


void PoseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:PoseProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&q_w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(q_w_));
  _internal_metadata_.Clear();
}

bool PoseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PoseProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float q_x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &q_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float q_y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &q_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float q_z = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &q_z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float q_w = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &q_w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PoseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PoseProto)
  return false;
#undef DO_
}

void PoseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PoseProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // float q_x = 4;
  if (this->q_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->q_x(), output);
  }

  // float q_y = 5;
  if (this->q_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->q_y(), output);
  }

  // float q_z = 6;
  if (this->q_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->q_z(), output);
  }

  // float q_w = 7;
  if (this->q_w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->q_w(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PoseProto)
}

::google::protobuf::uint8* PoseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PoseProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // float q_x = 4;
  if (this->q_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->q_x(), target);
  }

  // float q_y = 5;
  if (this->q_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->q_y(), target);
  }

  // float q_z = 6;
  if (this->q_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->q_z(), target);
  }

  // float q_w = 7;
  if (this->q_w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->q_w(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PoseProto)
  return target;
}

size_t PoseProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PoseProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float q_x = 4;
  if (this->q_x() != 0) {
    total_size += 1 + 4;
  }

  // float q_y = 5;
  if (this->q_y() != 0) {
    total_size += 1 + 4;
  }

  // float q_z = 6;
  if (this->q_z() != 0) {
    total_size += 1 + 4;
  }

  // float q_w = 7;
  if (this->q_w() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PoseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PoseProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PoseProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PoseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PoseProto)
    MergeFrom(*source);
  }
}

void PoseProto::MergeFrom(const PoseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PoseProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.q_x() != 0) {
    set_q_x(from.q_x());
  }
  if (from.q_y() != 0) {
    set_q_y(from.q_y());
  }
  if (from.q_z() != 0) {
    set_q_z(from.q_z());
  }
  if (from.q_w() != 0) {
    set_q_w(from.q_w());
  }
}

void PoseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PoseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoseProto::CopyFrom(const PoseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PoseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoseProto::IsInitialized() const {
  return true;
}

void PoseProto::Swap(PoseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoseProto::InternalSwap(PoseProto* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(q_x_, other->q_x_);
  swap(q_y_, other->q_y_);
  swap(q_z_, other->q_z_);
  swap(q_w_, other->q_w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PoseProto::GetMetadata() const {
  protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DescriptorsProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DescriptorsProto::kBitsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DescriptorsProto::DescriptorsProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_database_2eproto::scc_info_DescriptorsProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:DescriptorsProto)
}
DescriptorsProto::DescriptorsProto(const DescriptorsProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bitset().size() > 0) {
    bitset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitset_);
  }
  // @@protoc_insertion_point(copy_constructor:DescriptorsProto)
}

void DescriptorsProto::SharedCtor() {
  bitset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DescriptorsProto::~DescriptorsProto() {
  // @@protoc_insertion_point(destructor:DescriptorsProto)
  SharedDtor();
}

void DescriptorsProto::SharedDtor() {
  bitset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DescriptorsProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DescriptorsProto::descriptor() {
  ::protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DescriptorsProto& DescriptorsProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_database_2eproto::scc_info_DescriptorsProto.base);
  return *internal_default_instance();
}


void DescriptorsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:DescriptorsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bitset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DescriptorsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DescriptorsProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string bitset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bitset()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bitset().data(), static_cast<int>(this->bitset().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "DescriptorsProto.bitset"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DescriptorsProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DescriptorsProto)
  return false;
#undef DO_
}

void DescriptorsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DescriptorsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bitset = 1;
  if (this->bitset().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bitset().data(), static_cast<int>(this->bitset().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DescriptorsProto.bitset");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bitset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DescriptorsProto)
}

::google::protobuf::uint8* DescriptorsProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DescriptorsProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string bitset = 1;
  if (this->bitset().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bitset().data(), static_cast<int>(this->bitset().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "DescriptorsProto.bitset");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bitset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DescriptorsProto)
  return target;
}

size_t DescriptorsProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DescriptorsProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string bitset = 1;
  if (this->bitset().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bitset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DescriptorsProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DescriptorsProto)
  GOOGLE_DCHECK_NE(&from, this);
  const DescriptorsProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DescriptorsProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DescriptorsProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DescriptorsProto)
    MergeFrom(*source);
  }
}

void DescriptorsProto::MergeFrom(const DescriptorsProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DescriptorsProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bitset().size() > 0) {

    bitset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bitset_);
  }
}

void DescriptorsProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DescriptorsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DescriptorsProto::CopyFrom(const DescriptorsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DescriptorsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DescriptorsProto::IsInitialized() const {
  return true;
}

void DescriptorsProto::Swap(DescriptorsProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DescriptorsProto::InternalSwap(DescriptorsProto* other) {
  using std::swap;
  bitset_.Swap(&other->bitset_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DescriptorsProto::GetMetadata() const {
  protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FrameProto::InitAsDefaultInstance() {
  ::_FrameProto_default_instance_._instance.get_mutable()->frame_pose_ = const_cast< ::PoseProto*>(
      ::PoseProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameProto::kImagePointsFieldNumber;
const int FrameProto::kImageNormPointsFieldNumber;
const int FrameProto::kMapPointsFieldNumber;
const int FrameProto::kDescriptorsFieldNumber;
const int FrameProto::kFramePoseFieldNumber;
const int FrameProto::kFrameIdFieldNumber;
const int FrameProto::kLoopIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameProto::FrameProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_database_2eproto::scc_info_FrameProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:FrameProto)
}
FrameProto::FrameProto(const FrameProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      image_points_(from.image_points_),
      image_norm_points_(from.image_norm_points_),
      map_points_(from.map_points_),
      descriptors_(from.descriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_frame_pose()) {
    frame_pose_ = new ::PoseProto(*from.frame_pose_);
  } else {
    frame_pose_ = NULL;
  }
  ::memcpy(&frame_id_, &from.frame_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&loop_index_) -
    reinterpret_cast<char*>(&frame_id_)) + sizeof(loop_index_));
  // @@protoc_insertion_point(copy_constructor:FrameProto)
}

void FrameProto::SharedCtor() {
  ::memset(&frame_pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loop_index_) -
      reinterpret_cast<char*>(&frame_pose_)) + sizeof(loop_index_));
}

FrameProto::~FrameProto() {
  // @@protoc_insertion_point(destructor:FrameProto)
  SharedDtor();
}

void FrameProto::SharedDtor() {
  if (this != internal_default_instance()) delete frame_pose_;
}

void FrameProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FrameProto::descriptor() {
  ::protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FrameProto& FrameProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_database_2eproto::scc_info_FrameProto.base);
  return *internal_default_instance();
}


void FrameProto::Clear() {
// @@protoc_insertion_point(message_clear_start:FrameProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_points_.Clear();
  image_norm_points_.Clear();
  map_points_.Clear();
  descriptors_.Clear();
  if (GetArenaNoVirtual() == NULL && frame_pose_ != NULL) {
    delete frame_pose_;
  }
  frame_pose_ = NULL;
  ::memset(&frame_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&loop_index_) -
      reinterpret_cast<char*>(&frame_id_)) + sizeof(loop_index_));
  _internal_metadata_.Clear();
}

bool FrameProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FrameProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ImagePointProto image_points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_image_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ImageNormPointProto image_norm_points = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_image_norm_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .MapPointProto map_points = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_map_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .DescriptorsProto descriptors = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_descriptors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PoseProto frame_pose = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frame_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 frame_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frame_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 loop_index = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &loop_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FrameProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FrameProto)
  return false;
#undef DO_
}

void FrameProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FrameProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ImagePointProto image_points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->image_points(static_cast<int>(i)),
      output);
  }

  // repeated .ImageNormPointProto image_norm_points = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_norm_points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->image_norm_points(static_cast<int>(i)),
      output);
  }

  // repeated .MapPointProto map_points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->map_points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->map_points(static_cast<int>(i)),
      output);
  }

  // repeated .DescriptorsProto descriptors = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->descriptors(static_cast<int>(i)),
      output);
  }

  // .PoseProto frame_pose = 5;
  if (this->has_frame_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_frame_pose(), output);
  }

  // uint64 frame_id = 6;
  if (this->frame_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->frame_id(), output);
  }

  // uint64 loop_index = 7;
  if (this->loop_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->loop_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FrameProto)
}

::google::protobuf::uint8* FrameProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FrameProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ImagePointProto image_points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->image_points(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ImageNormPointProto image_norm_points = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->image_norm_points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->image_norm_points(static_cast<int>(i)), deterministic, target);
  }

  // repeated .MapPointProto map_points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->map_points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->map_points(static_cast<int>(i)), deterministic, target);
  }

  // repeated .DescriptorsProto descriptors = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->descriptors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->descriptors(static_cast<int>(i)), deterministic, target);
  }

  // .PoseProto frame_pose = 5;
  if (this->has_frame_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_frame_pose(), deterministic, target);
  }

  // uint64 frame_id = 6;
  if (this->frame_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->frame_id(), target);
  }

  // uint64 loop_index = 7;
  if (this->loop_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->loop_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FrameProto)
  return target;
}

size_t FrameProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FrameProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ImagePointProto image_points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->image_points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->image_points(static_cast<int>(i)));
    }
  }

  // repeated .ImageNormPointProto image_norm_points = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->image_norm_points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->image_norm_points(static_cast<int>(i)));
    }
  }

  // repeated .MapPointProto map_points = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->map_points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->map_points(static_cast<int>(i)));
    }
  }

  // repeated .DescriptorsProto descriptors = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->descriptors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->descriptors(static_cast<int>(i)));
    }
  }

  // .PoseProto frame_pose = 5;
  if (this->has_frame_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *frame_pose_);
  }

  // uint64 frame_id = 6;
  if (this->frame_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->frame_id());
  }

  // uint64 loop_index = 7;
  if (this->loop_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->loop_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FrameProto)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FrameProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FrameProto)
    MergeFrom(*source);
  }
}

void FrameProto::MergeFrom(const FrameProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FrameProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  image_points_.MergeFrom(from.image_points_);
  image_norm_points_.MergeFrom(from.image_norm_points_);
  map_points_.MergeFrom(from.map_points_);
  descriptors_.MergeFrom(from.descriptors_);
  if (from.has_frame_pose()) {
    mutable_frame_pose()->::PoseProto::MergeFrom(from.frame_pose());
  }
  if (from.frame_id() != 0) {
    set_frame_id(from.frame_id());
  }
  if (from.loop_index() != 0) {
    set_loop_index(from.loop_index());
  }
}

void FrameProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FrameProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameProto::CopyFrom(const FrameProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FrameProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameProto::IsInitialized() const {
  return true;
}

void FrameProto::Swap(FrameProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameProto::InternalSwap(FrameProto* other) {
  using std::swap;
  CastToBase(&image_points_)->InternalSwap(CastToBase(&other->image_points_));
  CastToBase(&image_norm_points_)->InternalSwap(CastToBase(&other->image_norm_points_));
  CastToBase(&map_points_)->InternalSwap(CastToBase(&other->map_points_));
  CastToBase(&descriptors_)->InternalSwap(CastToBase(&other->descriptors_));
  swap(frame_pose_, other->frame_pose_);
  swap(frame_id_, other->frame_id_);
  swap(loop_index_, other->loop_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FrameProto::GetMetadata() const {
  protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MapProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapProto::kFramesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapProto::MapProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_database_2eproto::scc_info_MapProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapProto)
}
MapProto::MapProto(const MapProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      frames_(from.frames_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MapProto)
}

void MapProto::SharedCtor() {
}

MapProto::~MapProto() {
  // @@protoc_insertion_point(destructor:MapProto)
  SharedDtor();
}

void MapProto::SharedDtor() {
}

void MapProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MapProto::descriptor() {
  ::protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapProto& MapProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_database_2eproto::scc_info_MapProto.base);
  return *internal_default_instance();
}


void MapProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  frames_.Clear();
  _internal_metadata_.Clear();
}

bool MapProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FrameProto frames = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_frames()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapProto)
  return false;
#undef DO_
}

void MapProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .FrameProto frames = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frames_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->frames(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MapProto)
}

::google::protobuf::uint8* MapProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MapProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .FrameProto frames = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->frames_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->frames(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapProto)
  return target;
}

size_t MapProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MapProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .FrameProto frames = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->frames_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->frames(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapProto)
  GOOGLE_DCHECK_NE(&from, this);
  const MapProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapProto)
    MergeFrom(*source);
  }
}

void MapProto::MergeFrom(const MapProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  frames_.MergeFrom(from.frames_);
}

void MapProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapProto::CopyFrom(const MapProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapProto::IsInitialized() const {
  return true;
}

void MapProto::Swap(MapProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapProto::InternalSwap(MapProto* other) {
  using std::swap;
  CastToBase(&frames_)->InternalSwap(CastToBase(&other->frames_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MapProto::GetMetadata() const {
  protobuf_database_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_database_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImagePointProto* Arena::CreateMaybeMessage< ::ImagePointProto >(Arena* arena) {
  return Arena::CreateInternal< ::ImagePointProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ImageNormPointProto* Arena::CreateMaybeMessage< ::ImageNormPointProto >(Arena* arena) {
  return Arena::CreateInternal< ::ImageNormPointProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MapPointProto* Arena::CreateMaybeMessage< ::MapPointProto >(Arena* arena) {
  return Arena::CreateInternal< ::MapPointProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PoseProto* Arena::CreateMaybeMessage< ::PoseProto >(Arena* arena) {
  return Arena::CreateInternal< ::PoseProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::DescriptorsProto* Arena::CreateMaybeMessage< ::DescriptorsProto >(Arena* arena) {
  return Arena::CreateInternal< ::DescriptorsProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::FrameProto* Arena::CreateMaybeMessage< ::FrameProto >(Arena* arena) {
  return Arena::CreateInternal< ::FrameProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::MapProto* Arena::CreateMaybeMessage< ::MapProto >(Arena* arena) {
  return Arena::CreateInternal< ::MapProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
