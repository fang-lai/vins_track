%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 

imu: 1       
num_of_stereo_cam: 0
num_of_mono_cam:   1

imu_topic:    "/mynteye_1/imu/data_raw"
image0_topic: "/mynteye_1/left/image_mono"
image1_topic: "/mynteye_1/right/image_mono"
image2_topic: "/mynteye_2/left/image_mono"
image3_topic: "/mynteye_2/right/image_mono"
output_path:  "~/output"   

cam0_calib: "cam_1_l_pinhole_full.yaml"
cam1_calib: "cam_1_r_pinhole_full.yaml"
cam2_calib: "cam_2_l_pinhole_full.yaml"
cam3_calib: "cam_2_r_pinhole_full.yaml"

image_width:  640
image_height: 400
   
# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix #cam0 coordinate under body coordinate
   rows: 4
   cols: 4
   dt: d
   data: [1.          , 0.       ,0.          ,0.,
          0.          , 1.       ,0.          ,0.,
          0.          , 0.       ,1.          ,0.,
          0.          , 0.       ,0.          ,1.   ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d      
   data: [0.9997587, -0.001548904, -0.02191346, 0.1998734,
          0.001408262, 0.9999783, -0.006432045, 0.0004787204,
          0.02192294, 0.006399633, 0.9997392, 0.000102723,
          0, 0, 0, 1]   

body_T_cam2: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d     
   data: [-1, 0, 0, 0.20,
          0, 1, 0, 0,
          0, 0, -1, -0.32,
          0, 0, 0, 1]  

body_T_cam3: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [-1, 0, 0, 0,
          0, 1, 0, 0,
          0, 0, -1, -0.32,
          0, 0, 0, 1]  

#Multiple thread support
multiple_thread: 1

#fish eye parameters
fish_eye_mask_radius: 0 # 自动生成
#fish_eye_mask_path: "/home/jon/code/ubt_code/mult_mono_vins/vins_mult_ws/src/VINS-Fusion/config/mask.jpg"

#feature traker paprameters
max_cnt: 80            # max feature number in feature tracking
min_dist: 20            # min distance between two features 
#min_dist: 20           # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04   # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.09          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.009         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.002      # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 0.00004      # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.8         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 1         # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/jon/code/data/pb/"    # save and load path
save_image: 0                       # save image in pose graph for visualization prupose; you can close this function by setting 0 

#line
use_line: 0
pl_slam: 1
shuang_mu: 0